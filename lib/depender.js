// Generated by CoffeeScript 1.3.3
(function() {
  var depender, root;

  root = this;

  root.namespace = function(ns) {
    var parent, part, parts, _i, _len, _ref;
    parts = ns.split('.');
    parent = root;
    for (_i = 0, _len = parts.length; _i < _len; _i++) {
      part = parts[_i];
      if ((_ref = parent[part]) == null) {
        parent[part] = {};
      }
      parent = parent[part];
    }
    return parent;
  };

  depender = namespace("depender");

  depender.missing = function(dependency) {
    var name, parent, path, _i, _len;
    path = dependency.split('.');
    parent = root;
    for (_i = 0, _len = path.length; _i < _len; _i++) {
      name = path[_i];
      parent = parent[name];
      if (!(parent != null)) {
        return true;
      }
    }
    return false;
  };

  depender.__deferred__ = [];

  root.define = function(dependencies, callback) {
    var action, actions, defer, procesding, _i, _j, _len, _len1;
    if (!dependencies.some(depender.missing)) {
      actions = [callback];
      while (actions.length > 0) {
        for (_i = 0, _len = actions.length; _i < _len; _i++) {
          action = actions[_i];
          action();
        }
        actions = [];
        procesding = depender.__deferred__;
        depender.__deferred__ = [];
        for (_j = 0, _len1 = procesding.length; _j < _len1; _j++) {
          defer = procesding[_j];
          if (!defer.dependencies.some(depender.missing)) {
            actions.push(defer.callback);
          } else {
            depender.__deferred__.push(defer);
          }
        }
      }
    } else {
      depender.__deferred__.push({
        dependencies: dependencies,
        callback: callback
      });
    }
    return depender.__deferred__.length === 0;
  };

}).call(this);
